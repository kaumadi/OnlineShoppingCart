// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShoppingCart.DataAccessLayer.Contexts;

namespace OnlineShoppingCart.Migrations
{
    [DbContext(typeof(OnlineShoppingCartContext))]
    [Migration("20200616082357_AddProductImage")]
    partial class AddProductImage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineShoppingCart.DataAccessLayer.Models.Category", b =>
                {
                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OnlineShoppingCart.DataAccessLayer.Models.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("OnlineShoppingCart.DataAccessLayer.Models.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CustomersCustomerId")
                        .HasColumnType("bigint");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("real");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomersCustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OnlineShoppingCart.DataAccessLayer.Models.OrderItem", b =>
                {
                    b.Property<long>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("OrdersOrderId")
                        .HasColumnType("bigint");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("real");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrdersOrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("OnlineShoppingCart.DataAccessLayer.Models.OrderItemProduct", b =>
                {
                    b.Property<int>("OrderItemProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderItemID")
                        .HasColumnType("int");

                    b.Property<long?>("OrderItemsOrderItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<long?>("ProductsProductId")
                        .HasColumnType("bigint");

                    b.HasKey("OrderItemProductID");

                    b.HasIndex("OrderItemsOrderItemId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("OrderItemProduct");
                });

            modelBuilder.Entity("OnlineShoppingCart.DataAccessLayer.Models.Payment", b =>
                {
                    b.Property<long>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("OrdersOrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.HasIndex("OrdersOrderId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("OnlineShoppingCart.DataAccessLayer.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CategoriesCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.Property<long>("UnitsInStock")
                        .HasColumnType("bigint");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoriesCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("OnlineShoppingCart.DataAccessLayer.Models.ProductImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductsProductId")
                        .HasColumnType("bigint");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("ProductImage");
                });

            modelBuilder.Entity("OnlineShoppingCart.DataAccessLayer.Models.Order", b =>
                {
                    b.HasOne("OnlineShoppingCart.DataAccessLayer.Models.Customer", "Customers")
                        .WithMany("Orders")
                        .HasForeignKey("CustomersCustomerId");
                });

            modelBuilder.Entity("OnlineShoppingCart.DataAccessLayer.Models.OrderItem", b =>
                {
                    b.HasOne("OnlineShoppingCart.DataAccessLayer.Models.Order", "Orders")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrdersOrderId");
                });

            modelBuilder.Entity("OnlineShoppingCart.DataAccessLayer.Models.OrderItemProduct", b =>
                {
                    b.HasOne("OnlineShoppingCart.DataAccessLayer.Models.OrderItem", "OrderItems")
                        .WithMany("OrderItemProducts")
                        .HasForeignKey("OrderItemsOrderItemId");

                    b.HasOne("OnlineShoppingCart.DataAccessLayer.Models.Product", "Products")
                        .WithMany("OrderItemProducts")
                        .HasForeignKey("ProductsProductId");
                });

            modelBuilder.Entity("OnlineShoppingCart.DataAccessLayer.Models.Payment", b =>
                {
                    b.HasOne("OnlineShoppingCart.DataAccessLayer.Models.Order", "Orders")
                        .WithMany()
                        .HasForeignKey("OrdersOrderId");
                });

            modelBuilder.Entity("OnlineShoppingCart.DataAccessLayer.Models.Product", b =>
                {
                    b.HasOne("OnlineShoppingCart.DataAccessLayer.Models.Category", "Categories")
                        .WithMany("Products")
                        .HasForeignKey("CategoriesCategoryId");
                });

            modelBuilder.Entity("OnlineShoppingCart.DataAccessLayer.Models.ProductImage", b =>
                {
                    b.HasOne("OnlineShoppingCart.DataAccessLayer.Models.Product", "Products")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductsProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
